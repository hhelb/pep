{"version":3,"sources":["user.js"],"names":[],"mappings":";;;;;;AAAA;;IAAY,K;;AACZ;;;;AAEA,IAAM,UAAU,SAAV,OAAU,GAGX;AAAA,MAFH,KAEG,uEAFK,IAEL;AAAA,MADH,MACG;;AACH,UAAQ,OAAO,IAAf;AACE,SAAK,MAAM,iBAAX;AACE,aAAO,CAAC,KAAR;AACF;AACE,aAAO,KAAP;AAJJ;AAMD,CAVD;;AAYA,IAAM,UAAU,SAAV,OAAU,GAGX;AAAA,MAFH,KAEG,uEAFK,EAEL;AAAA,MADH,MACG;;AACH,UAAQ,OAAO,IAAf;AACE,SAAK,MAAM,iBAAX;AACA,SAAK,MAAM,iBAAX;AACA,SAAK,MAAM,WAAX;AACA,SAAK,MAAM,WAAX;AACA,SAAK,MAAM,kBAAX;AACA,SAAK,MAAM,mBAAX;AACE,aAAO,EAAP;AACF,SAAK,MAAM,gBAAX;AACA,SAAK,MAAM,iBAAX;AACE,aAAO,OAAO,OAAd;AACF;AACE,aAAO,KAAP;AAZJ;AAcD,CAlBD;;AAoBA,IAAM,YAAY,SAAZ,SAAY,GAGb;AAAA,MAFH,KAEG,uEAFK,KAEL;AAAA,MADH,MACG;;AACH,UAAQ,OAAO,IAAf;AACE,SAAK,MAAM,iBAAX;AACA,SAAK,MAAM,WAAX;AACA,SAAK,MAAM,WAAX;AACE,aAAO,IAAP;AACF,SAAK,MAAM,kBAAX;AACA,SAAK,MAAM,mBAAX;AACA,SAAK,MAAM,mBAAX;AACA,SAAK,MAAM,gBAAX;AACA,SAAK,MAAM,iBAAX;AACA,SAAK,MAAM,iBAAX;AACE,aAAO,KAAP;AACF;AACE,aAAO,KAAP;AAbJ;AAeD,CAnBD;;AAqBA,IAAM,gBAAgB,SAAhB,aAAgB,GAGjB;AAAA,MAFH,KAEG,uEAFK,KAEL;AAAA,MADH,MACG;;AACH,UAAQ,OAAO,IAAf;AACE,SAAK,MAAM,kBAAX;AACA,SAAK,MAAM,mBAAX;AACA,SAAK,MAAM,iBAAX;AACE,aAAO,IAAP;AACF,SAAK,MAAM,gBAAX;AACA,SAAK,MAAM,iBAAX;AACA,SAAK,MAAM,mBAAX;AACE,aAAO,KAAP;AACF;AACE,aAAO,KAAP;AAVJ;AAYD,CAhBD;;AAkBA,IAAM,cAAc,4BAAgB;AAClC,kBADkC;AAElC,sBAFkC;AAGlC,8BAHkC;AAIlC;AAJkC,CAAhB,CAApB;;kBAOe,W","file":"user-compiled.js","sourcesContent":["import * as types from 'types';\nimport { combineReducers } from 'redux';\n\nconst isLogin = (\n  state = true,\n  action\n) => {\n  switch (action.type) {\n    case types.TOGGLE_LOGIN_MODE:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nconst message = (\n  state = '',\n  action\n) => {\n  switch (action.type) {\n    case types.TOGGLE_LOGIN_MODE:\n    case types.MANUAL_LOGIN_USER:\n    case types.SIGNUP_USER:\n    case types.LOGOUT_USER:\n    case types.LOGIN_SUCCESS_USER:\n    case types.SIGNUP_SUCCESS_USER:\n      return '';\n    case types.LOGIN_ERROR_USER:\n    case types.SIGNUP_ERROR_USER:\n      return action.message;\n    default:\n      return state;\n  }\n};\n\nconst isWaiting = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.MANUAL_LOGIN_USER:\n    case types.SIGNUP_USER:\n    case types.LOGOUT_USER:\n      return true;\n    case types.LOGIN_SUCCESS_USER:\n    case types.SIGNUP_SUCCESS_USER:\n    case types.LOGOUT_SUCCESS_USER:\n    case types.LOGIN_ERROR_USER:\n    case types.SIGNUP_ERROR_USER:\n    case types.LOGOUT_ERROR_USER:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst authenticated = (\n  state = false,\n  action\n) => {\n  switch (action.type) {\n    case types.LOGIN_SUCCESS_USER:\n    case types.SIGNUP_SUCCESS_USER:\n    case types.LOGOUT_ERROR_USER:\n      return true;\n    case types.LOGIN_ERROR_USER:\n    case types.SIGNUP_ERROR_USER:\n    case types.LOGOUT_SUCCESS_USER:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst userReducer = combineReducers({\n  isLogin,\n  isWaiting,\n  authenticated,\n  message\n});\n\nexport default userReducer;"]}