{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;IAAY,K;;;;;;AAEZ,IAAM,aAAa,SAAb,UAAa,GAA6B;AAAA,MAA3B,KAA2B,uEAAnB,KAAmB;AAAA,MAAZ,MAAY;;AAC9C,UAAQ,OAAO,IAAf;AACE,SAAK,MAAM,cAAX;AACE,aAAO,IAAP;AACF,SAAK,MAAM,eAAX;AACA,SAAK,MAAM,eAAX;AACE,aAAO,KAAP;AACF;AACE,aAAO,KAAP;AAPJ;AASD,CAVD;;AAYA;AACA;AACA,IAAM,cAAc,4BAAgB;AAClC,wBADkC;AAElC,wBAFkC;AAGlC,wBAHkC;AAIlC,sBAJkC;AAKlC,4BALkC;AAMlC,0CANkC;AAOlC;AAPkC,CAAhB,CAApB;;kBAUe,W","file":"index-compiled.js","sourcesContent":["import { combineReducers } from 'redux';\nimport user from 'reducers/user';\nimport topic from 'reducers/topic';\nimport message from 'reducers/message';\nimport fiche  from 'reducers/fiche';\nimport {reducer as formReducer } from 'redux-form';\nimport { routerReducer as routing } from 'react-router-redux';\nimport * as types from 'types';\n\nconst isFetching = ( state = false, action ) => {\n  switch (action.type) {\n    case types.CREATE_REQUEST:\n      return true;\n    case types.REQUEST_SUCCESS:\n    case types.REQUEST_FAILURE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n// Combine reducers with routeReducer which keeps track of\n// router state\nconst rootReducer = combineReducers({\n  isFetching,\n  fiche,\n  topic,\n  user,\n  message,\n  routing,\n  form : formReducer\n});\n\nexport default rootReducer;\n"]}