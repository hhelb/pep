{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAI,WAAW,IAAf;;AAEA;AACA;AACE,OAAK,oBAAS,KAAd;AACE,eAAW,QAAQ,SAAR,CAAX;AACA;AACF,OAAK,oBAAS,QAAd;AACE,eAAW,QAAQ,YAAR,CAAX;AACA;AACF,OAAK,oBAAS,IAAd;AACE,eAAW,QAAQ,QAAR,CAAX;AACA;AACF;AACE,UAAM,IAAI,KAAJ,yDAAN;AAXJ;;AAcO,IAAM,4BAAU,SAAS,OAAzB;AACA,IAAM,oCAAc,SAAS,WAA7B;AACA,IAAM,8BAAW,SAAS,QAA1B;AACA,IAAM,4BAAU,SAAS,OAAzB;;kBAEQ,SAAS,O","file":"index-compiled.js","sourcesContent":["import { DB_TYPE } from '../config/appConfig';\nimport { DB_TYPES } from '../config/constants';\n\nlet dbConfig = null;\n\n/* use inline requires for conditional loading */\nswitch (DB_TYPE) {\n  case DB_TYPES.MONGO:\n    dbConfig = require('./mongo');\n    break;\n  case DB_TYPES.POSTGRES:\n    dbConfig = require('./postgres');\n    break;\n  case DB_TYPES.NONE:\n    dbConfig = require('./none');\n    break;\n  default:\n    throw new Error(`No database type '${DB_TYPE}' found`);\n}\n\nexport const connect = dbConfig.connect;\nexport const controllers = dbConfig.controllers;\nexport const passport = dbConfig.passport;\nexport const session = dbConfig.session;\n\nexport default dbConfig.default;\n"]}