{"version":3,"sources":["fiches.js"],"names":[],"mappings":";;;;;QAQgB,G,GAAA,G;QAWA,G,GAAA,G;QAeA,M,GAAA,M;QAWA,M,GAAA,M;QAUA,G,GAAA,G;;AApDhB;;;;;;AAEA;;;AAGO,SAAS,GAAT,CAAa,GAAb,EAAkB,GAAlB,EAAuB;AAC1B,qBAAM,IAAN,CAAW,EAAX,EAAe,IAAf,CAAoB,UAAC,GAAD,EAAM,MAAN,EAAiB;AACjC,YAAI,GAAJ,EAAS;AACL,oBAAQ,GAAR,CAAY,sBAAZ;AACA,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,uCAArB,CAAP;AACH;;AAED,eAAO,IAAI,IAAJ,CAAS,MAAT,CAAP;AACH,KAPD;AAQH,C,CAjBD;;;AAmBO,SAAS,GAAT,CAAc,GAAd,EAAmB,GAAnB,EAAuB;AAC1B,QAAI,QAAQ,qBAAU;AAClB,YAAK,IAAI,IAAJ,CAAS,EADI;AAElB,cAAM,IAAI,IAAJ,CAAS,IAFG;AAGlB,cAAM,IAAI,IAAJ,CAAS;AAHG,KAAV,CAAZ;AAKA,WAAO,MAAM,IAAN,CAAW,UAAC,GAAD,EAAQ;AACtB,YAAG,GAAH,EAAO;AACH,oBAAQ,GAAR,CAAY,GAAZ;AACA,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,MAArB,CAAP;AACH;AACD,eAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,eAArB,CAAP;AACH,KANM,CAAP;AAOH;;AAEM,SAAS,MAAT,CAAiB,GAAjB,EAAsB,GAAtB,EAA0B;AAC7B,QAAM,QAAQ,EAAE,IAAK,IAAI,MAAJ,CAAW,EAAlB,EAAd;AACA,qBAAM,gBAAN,CAAwB,KAAxB,EAA+B,UAAC,GAAD,EAAQ;AACnC,YAAG,GAAH,EAAQ;AACJ,oBAAQ,GAAR,CAAY,WAAW,GAAvB;AACA,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,qCAArB,CAAP;AACH;AACD,eAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,4BAArB,CAAP;AACH,KAND;AAQH;AACM,SAAS,MAAT,CAAgB,GAAhB,EAAqB,GAArB,EAA0B;AAC7B,QAAM,QAAQ,EAAC,IAAK,IAAI,MAAJ,CAAW,EAAjB,EAAd;AACA,qBAAM,gBAAN,CAAwB,KAAxB,EAA+B,IAAI,IAAnC,EAAyC,UAAC,GAAD,EAAS;AAC9C,YAAG,GAAH,EAAO;AACH,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,kCAAiC,MAAM,EAA5D,CAAP;AACH;AACD,eAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,cAArB,CAAP;AACH,KALD;AAMH;;AAEM,SAAS,GAAT,CAAa,GAAb,EAAkB,GAAlB,EAAsB;AACzB,QAAM,QAAQ,EAAC,IAAK,IAAI,MAAJ,CAAW,EAAjB,EAAd;AACA,qBAAM,OAAN,CAAc,KAAd,EAAqB,UAAC,GAAD,EAAM,KAAN,EAAe;AAChC,YAAG,GAAH,EAAQ;AACJ,oBAAQ,GAAR,CAAY,sBAAZ;AACA,mBAAO,IAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB,uCAArB,CAAP;AACH;AACD,eAAO,IAAI,IAAJ,CAAS,KAAT,CAAP;AACH,KAND;AAOH;;kBAEa;AACV,YADU;AAEV,YAFU;AAGV,YAHU;AAIV,kBAJU;AAKV;AALU,C","file":"fiches-compiled.js","sourcesContent":["/**\r\n * Created by hasj on 21/11/2016.\r\n */\r\nimport Fiche from '../models/fiches';\r\n\r\n/**\r\n * List\r\n */\r\nexport function all(req, res) {\r\n    Fiche.find({}).exec((err, fiches) => {\r\n        if (err) {\r\n            console.log('Error in first query');\r\n            return res.status(500).send('Something went wrong getting the data');\r\n        }\r\n\r\n        return res.json(fiches);\r\n    });\r\n}\r\n\r\nexport function add (req, res){\r\n    let fiche = new Fiche({\r\n        id : req.body.id,\r\n        name: req.body.name,\r\n        text: req.body.text\r\n    });\r\n    return fiche.save((err) =>{\r\n        if(err){\r\n            console.log(err);\r\n            return res.status(400).send(\"nope\")\r\n        }\r\n        return res.status(200).send('fiche created');\r\n    })\r\n}\r\n\r\nexport function remove (req, res){\r\n    const query = { id : req.params.id};\r\n    Fiche.findOneAndRemove( query, (err) =>{\r\n        if(err) {\r\n            console.log(\"error \" + err);\r\n            return res.status(500).send('We failed to delete for some reason');\r\n        }\r\n        return res.status(200).send(\"fiche removed successfully\");\r\n    })\r\n\r\n}\r\nexport function update(req, res) {\r\n    const query = {id : req.params.id};\r\n    Fiche.findOneAndUpdate( query, req.body, (err) => {\r\n        if(err){\r\n            return res.status(500).send('Failed to update the data of '+ query.id);\r\n        }\r\n        return res.status(200).send('Fiche update');\r\n    })\r\n}\r\n\r\nexport function one(req, res){\r\n    const query = {id : req.params.id};\r\n    Fiche.findOne(query, (err, fiche)=> {\r\n        if(err) {\r\n            console.log('Error in first query');\r\n            return res.status(500).send('Something went wrong getting the data');\r\n        }\r\n        return res.json(fiche);\r\n    })\r\n}\r\n\r\nexport default{\r\n    all,\r\n    one,\r\n    add,\r\n    remove,\r\n    update\r\n}\r\n"]}