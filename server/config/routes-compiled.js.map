{"version":3,"sources":["routes.js"],"names":[],"mappings":";;;;;;AAGA;;;;AACA;;;;AACA;;;;AAEA,IAAM,kBAAkB,mBAAe,gBAAY,KAAnD,C,CAPA;;;;AAQA,IAAM,mBAAmB,mBAAe,gBAAY,MAApD;AACA,IAAM,mBAAmB,mBAAe,gBAAY,MAApD;AACA,IAAM,sBAAsB,mBAAe,gBAAY,SAAvD;;kBAEe,UAAC,GAAD,EAAS;AACtB;AACA,MAAI,eAAJ,EAAqB;AACnB,QAAI,IAAJ,CAAS,QAAT,EAAmB,gBAAgB,KAAnC;AACA,QAAI,IAAJ,CAAS,SAAT,EAAoB,gBAAgB,MAApC;AACA,QAAI,IAAJ,CAAS,SAAT,EAAoB,gBAAgB,MAApC;AACD,GAJD,MAIO;AACL,YAAQ,IAAR,CAAa,kCAAmB,cAAnB,CAAb;AACD;;AAED,MAAI,gBAAkB,aAAe,MAArC,EAA6C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,QAAI,GAAJ,CAAQ,cAAR,EAAwB,mBAAS,YAAT,CAAsB,QAAtB,EAAgC;AACtD,aAAO,CACL,kDADK,EAEL,gDAFK;AAD+C,KAAhC,CAAxB;;AAOA;AACA;AACA;AACA,QAAI,GAAJ,CAAQ,uBAAR,EACE,mBAAS,YAAT,CAAsB,QAAtB,EAAgC;AAC9B,uBAAiB,GADa;AAE9B,uBAAiB;AAFa,KAAhC,CADF;AAMD;;AAED;AACA,MAAI,gBAAJ,EAAsB;AACpB,QAAI,GAAJ,CAAQ,QAAR,EAAkB,iBAAiB,GAAnC;AACA,QAAI,IAAJ,CAAS,YAAT,EAAuB,iBAAiB,GAAxC;AACA,QAAI,GAAJ,CAAQ,YAAR,EAAsB,iBAAiB,MAAvC;AACA,QAAI,MAAJ,CAAW,YAAX,EAAyB,iBAAiB,MAA1C;AACD,GALD,MAKO;AACL,YAAQ,IAAR,CAAa,kCAAmB,eAAnB,CAAb;AACD;;AAED,MAAI,gBAAJ,EAAsB;AACpB,QAAI,GAAJ,CAAQ,SAAR,EAAmB,iBAAiB,GAApC;AACA,QAAI,GAAJ,CAAQ,mBAAR,EAA6B,iBAAiB,GAA9C;AACA,QAAI,IAAJ,CAAS,aAAT,EAAwB,iBAAiB,GAAzC;AACA,QAAI,MAAJ,CAAW,aAAX,EAA0B,iBAAiB,MAA3C;AACA,QAAI,GAAJ,CAAQ,aAAR,EAAuB,iBAAiB,MAAxC;AACD,GAND,MAMO;AACL,YAAQ,IAAR,CAAa,kCAAmB,eAAnB,CAAb;AACD;;AAED,MAAI,mBAAJ,EAAyB;AACvB,QAAI,GAAJ,CAAQ,YAAR,EAAsB,oBAAoB,GAA1C;AACD,GAFD,MAEO;AACL,YAAQ,IAAR,CAAa,kCAAmB,kBAAnB,CAAb;AACD;AACF,C","file":"routes-compiled.js","sourcesContent":["/**\n * Routes for express app\n */\nimport passport from 'passport';\nimport unsupportedMessage from '../db/unsupportedMessage';\nimport { controllers, passport as passportConfig } from '../db';\n\nconst usersController = controllers && controllers.users;\nconst topicsController = controllers && controllers.topics;\nconst fichesController = controllers && controllers.fiches;\nconst playlistsController = controllers && controllers.playlists;\n\nexport default (app) => {\n  // user routes\n  if (usersController) {\n    app.post('/login', usersController.login);\n    app.post('/signup', usersController.signUp);\n    app.post('/logout', usersController.logout);\n  } else {\n    console.warn(unsupportedMessage('users routes'));\n  }\n\n  if (passportConfig && passportConfig.google) {\n    // google auth\n    // Redirect the user to Google for authentication. When complete, Google\n    // will redirect the user back to the application at\n    // /auth/google/return\n    // Authentication with google requires an additional scope param, for more info go\n    // here https://developers.google.com/identity/protocols/OpenIDConnect#scope-param\n    app.get('/auth/google', passport.authenticate('google', {\n      scope: [\n        'https://www.googleapis.com/auth/userinfo.profile',\n        'https://www.googleapis.com/auth/userinfo.email'\n      ]\n    }));\n\n    // Google will redirect the user to this URL after authentication. Finish the\n    // process by verifying the assertion. If valid, the user will be logged in.\n    // Otherwise, the authentication has failed.\n    app.get('/auth/google/callback',\n      passport.authenticate('google', {\n        successRedirect: '/',\n        failureRedirect: '/login'\n      })\n    );\n  }\n\n  // topic routes\n  if (topicsController) {\n    app.get('/topic', topicsController.all);\n    app.post('/topic/:id', topicsController.add);\n    app.put('/topic/:id', topicsController.update);\n    app.delete('/topic/:id', topicsController.remove);\n  } else {\n    console.warn(unsupportedMessage('topics routes'));\n  }\n\n  if (fichesController) {\n    app.get('/fiches', fichesController.all);\n    app.get('/fiches/fiche/:id', fichesController.one);\n    app.post('/fiches/:id', fichesController.add);\n    app.delete('/fiches/:id', fichesController.remove);\n    app.put('/fiches/:id' ,fichesController.update)\n  } else {\n    console.warn(unsupportedMessage('fiches routes'));\n  }\n\n  if (playlistsController) {\n    app.get('/playlists', playlistsController.all);\n  } else {\n    console.warn(unsupportedMessage('playlists routes'));\n  }\n};\n"]}