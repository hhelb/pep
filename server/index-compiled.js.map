{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAM,MAAM,QAAQ,yBAAR,CAAZ;AACA,IAAM,MAAM,wBAAZ;;AAEA;;;;;AAKA;;AAEA;;;AAGA;;AAEA,IAAI,mBAAQ,aAAZ,EAA2B;AACzB,MAAM,mBAAmB,QAAQ,sCAAR,CAAzB;AACA,MAAM,WAAW,uBAAQ,gBAAR,CAAjB;AACA,MAAI,GAAJ,CAAQ,QAAQ,wBAAR,EAAkC,QAAlC,EAA4C;AAClD,YAAQ,IAD0C;AAElD,gBAAY,iBAAiB,MAAjB,CAAwB;AAFc,GAA5C,CAAR;;AAKA,MAAI,GAAJ,CAAQ,QAAQ,wBAAR,EAAkC,QAAlC,CAAR;AACD;;AAED;;;AAGA,uBAAc,GAAd;;AAEA;;;;;AAKA,sBAAa,GAAb;;AAEA;;;;;;AAMA,IAAI,GAAJ,CAAQ,GAAR,EAAa,IAAI,OAAjB;;AAEA,IAAI,MAAJ,CAAW,IAAI,GAAJ,CAAQ,MAAR,CAAX","file":"index-compiled.js","sourcesContent":["import express from 'express';\nimport webpack from 'webpack';\nimport { ENV } from './config/appConfig';\nimport { connect } from './db';\nimport passportConfig from './config/passport';\nimport expressConfig from './config/express';\nimport routesConfig from './config/routes';\nconst App = require('../public/assets/server');\nconst app = express();\n\n/*\n * Database-specific setup\n * - connect to MongoDB using mongoose\n * - register mongoose Schema\n */\nconnect();\n\n/*\n * REMOVE if you do not need passport configuration\n */\npassportConfig();\n\nif (ENV === 'development') {\n  const webpackDevConfig = require('../webpack/webpack.config.dev-client');\n  const compiler = webpack(webpackDevConfig);\n  app.use(require('webpack-dev-middleware')(compiler, {\n    noInfo: true,\n    publicPath: webpackDevConfig.output.publicPath\n  }));\n\n  app.use(require('webpack-hot-middleware')(compiler));\n}\n\n/*\n * Bootstrap application settings\n */\nexpressConfig(app);\n\n/*\n * REMOVE if you do not need any routes\n *\n * Note: Some of these routes have passport and database model dependencies\n */\nroutesConfig(app);\n\n/*\n * This is where the magic happens. We take the locals data we have already\n * fetched and seed our stores with data.\n * App is a function that requires store data and url\n * to initialize and return the React-rendered html string\n */\napp.get('*', App.default);\n\napp.listen(app.get('port'));\n"]}